#!/usr/bin/python3

import sys

_________________ = """USAGE
    ./308reedpipes r0 r5 r10 r15 r20 n

DESCRIPTION
    r0      radius (in cm) of the pipe at the 0cm abscissa
    r5      radius (in cm) of the pipe at the 5cm abscissa
    r10     radius (in cm) of the pipe at the 10cm abscissa
    r15     radius (in cm) of the pipe at the 15cm abscissa
    r20     radius (in cm) of the pipe at the 20cm abscissa
    n       number of points needed to display the radius"""


if __name__ == '__main__':
    if len(sys.argv) == 2 and sys.argv[1] == '-h':
        print(_________________)
        exit(0)
    elif len(sys.argv) != 7:
        print("Invalid number of arguments")
        print("Pleas use the -h option for help")
        exit(84)
    else:
        try:
            __________, ___________, ____________, _____________, ______________, _______________ = float(sys.argv[1]), float(sys.argv[2]), float(sys.argv[3]), float(sys.argv[4]), float(sys.argv[5]), int(sys.argv[6])
            if __________ <= 0 or ___________ <= 0 or ____________ <= 0 or _____________ <= 0 or ______________ <= 0 or _______________ <= 0:
                raise ValueError
            ________________ = []
            if __________ != _______________:
                ________________.append(__________)
            if ___________ != _______________:
                ________________.append(___________)
            if ____________ != _______________:
                ________________.append(____________)
            if _____________ != _______________:
                ________________.append(_____________)
            if ______________ != _______________:
                ________________.append(______________)
            _ = 6 * (____________ - 2 * ___________ + __________) / 50
            __ = 6 * (_____________ - 2 * ____________ + ___________) / 50
            ___ = 6 * (______________ - 2 * _____________ + ____________) / 50
            ____ = [0, 5, 10, 15, 20]
            _____ = [0, 0, 0, 0, 0]
            _____[2] = (__ - (_ + ___) / 4) * 4 / 7
            _____[1] = _ / 2 - 0.25 * _____[2]
            _____[3] = ___ / 2 - 0.25 * _____[2]
            ______ = []
            for _______ in range(_______________):
                ________ = 20 / (_______________ - 1) * _______
                _________ = int((________ - 0.01) / 5) + 1
                ______.append(- _____[_________ - 1] / 30 * pow(________ - ____[_________], 3) + _____[_________] / 30 * pow(________ - ____[_________ - 1], 3) - (________________[_________ - 1] / 5 - 5 / 6 * _____[_________ - 1]) * (________ - ____[_________]) + (________________[_________] / 5 - 5 / 6 * _____[_________]) * (________ - ____[_________ - 1]))
            print("vector result: [{:.1f}, {:.1f}, {:.1f}, {:.1f}, {:.1f}]".format(_____[0] if round(_____[0], 1) != 0 else 0, _____[1] if round(_____[1], 1) != 0 else 0, _____[2] if round(_____[2], 1) != 0 else 0, _____[3] if round(_____[3], 1) != 0 else 0, _____[4] if round(_____[4], 1) != 0 else 0))
            for _________ in range(_______________):
                print("abscissa: {:.1f} cm\tradius: {:.1f} cm".format(20 / (_______________ - 1) * _________, ______[_________]))
        except:
            print("Oops something went wrong")
            print("Pleas use the -h option for help")
            exit(84)
    exit(0)
